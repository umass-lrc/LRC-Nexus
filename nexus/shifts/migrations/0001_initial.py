# Generated by Django 5.0.1 on 2024-01-28 19:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0007_alter_classtimes_start_time'),
        ('users', '0004_alter_positiongroups_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RecurringShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveSmallIntegerField(choices=[(0, 'Sunday'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday')], help_text='The day of the week that this recurring shift is for.')),
                ('start_time', models.TimeField(help_text='The start time of the recurring shift.')),
                ('duration', models.DurationField(help_text='The duration of the recurring shift.')),
                ('room', models.CharField(help_text='The room the recurring shift is in.', max_length=10)),
                ('kind', models.CharField(choices=[('SI Session', 'Si Session'), ('Tutor Drop-In', 'Tutor Drop In'), ('Tutor Appointment', 'Tutor Appointment'), ('Group Tutoring', 'Group Tutoring'), ('Training', 'Training'), ('Observation', 'Observation'), ('Class', 'Class'), ('Preparation', 'Preparation'), ('Meeting', 'Meeting'), ('OURS Mentor Hours', 'Ours Mentor Hours'), ('OA Hours', 'Oa Hours'), ('Other', 'Other')], help_text='The kind of recurring shift.', max_length=30)),
                ('note', models.TextField(blank=True, help_text='Any notes for the recurring shift. This will be copied to all shifts.', null=True)),
                ('document', models.FileField(blank=True, help_text='Any attached document for the recurring shift. This will be copied to all shifts.', null=True, upload_to='')),
                ('require_punch_in_out', models.BooleanField(default=False, help_text='Whether or not the recurring shift requires punch in/out.')),
                ('start_date', models.DateField(help_text='The start date of the recurring shift.')),
                ('end_date', models.DateField(help_text='The end date of the recurring shift. This is inclusive.')),
                ('building', models.ForeignKey(help_text='The building the recurring shift is in.', on_delete=django.db.models.deletion.RESTRICT, to='core.buildings')),
                ('position', models.ForeignKey(help_text='The position that this recurring shift is for.', on_delete=django.db.models.deletion.CASCADE, to='users.positions')),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(help_text='The start date/time of the shift.')),
                ('duration', models.DurationField(help_text='The duration of the shift.')),
                ('room', models.CharField(help_text='The room the shift is in.', max_length=10)),
                ('kind', models.CharField(choices=[('SI Session', 'Si Session'), ('Tutor Drop-In', 'Tutor Drop In'), ('Tutor Appointment', 'Tutor Appointment'), ('Group Tutoring', 'Group Tutoring'), ('Training', 'Training'), ('Observation', 'Observation'), ('Class', 'Class'), ('Preparation', 'Preparation'), ('Meeting', 'Meeting'), ('OURS Mentor Hours', 'Ours Mentor Hours'), ('OA Hours', 'Oa Hours'), ('Other', 'Other')], help_text='The kind of shift.', max_length=30)),
                ('note', models.TextField(blank=True, help_text='Any notes for the shift.', null=True)),
                ('document', models.FileField(blank=True, help_text='Any attached document for the shift.', null=True, upload_to='')),
                ('require_punch_in_out', models.BooleanField(default=False, help_text='Whether or not the shift requires punch in/out.')),
                ('dropped', models.BooleanField(default=False, help_text='Whether or not the shift is dropped.')),
                ('changed', models.BooleanField(default=False, help_text='Whether or not the shift has been changed.')),
                ('building', models.ForeignKey(help_text='The building the shift is in.', on_delete=django.db.models.deletion.RESTRICT, to='core.buildings')),
                ('position', models.ForeignKey(help_text='The position that this shift is for.', on_delete=django.db.models.deletion.CASCADE, to='users.positions')),
                ('recurring_shift', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shifts.recurringshift')),
            ],
        ),
        migrations.CreateModel(
            name='ChangeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(help_text='The start date/time of the shift.')),
                ('duration', models.DurationField(help_text='The duration of the shift.')),
                ('room', models.CharField(help_text='The room the shift is in.', max_length=10)),
                ('kind', models.CharField(choices=[('SI Session', 'Si Session'), ('Tutor Drop-In', 'Tutor Drop In'), ('Tutor Appointment', 'Tutor Appointment'), ('Group Tutoring', 'Group Tutoring'), ('Training', 'Training'), ('Observation', 'Observation'), ('Class', 'Class'), ('Preparation', 'Preparation'), ('Meeting', 'Meeting'), ('OURS Mentor Hours', 'Ours Mentor Hours'), ('OA Hours', 'Oa Hours'), ('Other', 'Other')], help_text='The kind of shift.', max_length=30)),
                ('reason', models.TextField(help_text='The reason for the change request.')),
                ('state', models.CharField(choices=[('Not Viewed', 'Not Viewed'), ('In Progress', 'In Progress'), ('Denied', 'Denied'), ('Approved', 'Approved')], help_text='The state of the change request.', max_length=15)),
                ('last_changed_on', models.DateTimeField(blank=True, help_text='The date/time the change request was last changed.', null=True)),
                ('building', models.ForeignKey(help_text='The building the shift is in.', on_delete=django.db.models.deletion.RESTRICT, to='core.buildings')),
                ('last_change_by', models.ForeignKey(blank=True, help_text='The last person to change the state of the change request.', null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('shift', models.ForeignKey(help_text='The shift that this change request is for.', on_delete=django.db.models.deletion.RESTRICT, to='shifts.shift')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('punch_in_time', models.TimeField(blank=True, help_text='The time you punched in for the shift.', null=True)),
                ('punch_out_time', models.TimeField(blank=True, help_text='The time you punched out for the shift.', null=True)),
                ('attended', models.BooleanField(default=False, help_text='Whether or not you attended the shift?')),
                ('reason_not_attended', models.TextField(blank=True, help_text='The reason you did not attend the shift.', null=True)),
                ('signed', models.BooleanField(default=False, help_text='Whether or not you approved the information provided.')),
                ('sign_datetime', models.DateTimeField(blank=True, help_text='The date/time the information was signed.', null=True)),
                ('flag_late', models.BooleanField(default=False, help_text='Whether or not the shift was signed after the payroll period.')),
                ('shift', models.ForeignKey(help_text='The shift that this attendance info is for.', on_delete=django.db.models.deletion.RESTRICT, to='shifts.shift', unique=True)),
            ],
        ),
    ]
